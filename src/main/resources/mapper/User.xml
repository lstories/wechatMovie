<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 建立xml文件 -->

<!--
mapper层的路径放到 namespace
id 是 方法名字,
resultType 是对象 entity对应的实体类路径
-->
<mapper namespace="com.wechatmovie.mapper.UserMapper">
    <!--  新增用户  -->
    <insert id="addUser">
        insert into usertable(userId, name, username, password, age, sex, phone)
        value (#{userId}, #{name}, #{username}, #{password}, #{age}, #{sex}, #{phone})
    </insert>
    <!--  查询用户列表  -->
    <select id="listUsers" resultType="com.wechatmovie.entity.User">
        select * from usertable order by userId desc
    </select>
    <!--  用户模糊查询  -->
    <select id="listByCondition" resultType="com.wechatmovie.entity.User">
        select * from usertable
            <where>
                <if test="username != null and username != ''">
                    username like concat('%', #{ username }, '%')
                </if>
            </where>
        order by userId desc
    </select>
    <!--  通过userId来查询  -->
    <select id="getByUserId" resultType="com.wechatmovie.entity.User">
        select * from usertable where userId = #{userId}
    </select>
    <!--  通过id将修改后的数据, 更新到数据库  -->
    <update id="updateUserById">
        update usertable set name = #{name}, password = #{password},sex = #{sex}, age = #{age}, phone = #{phone}
        where userId = #{userId}
    </update>
    <!--   通过Id删除用户  -->
    <delete id="deleteUserById">
        delete from usertable where userId = #{userId}
    </delete>


</mapper>




























